// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `data.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var nice = __M.module("nice");

    nice.api = __M.module("nice.api");

    nice.api.data = __M.module("nice.api.data");

    /**
     * Various data types
     * 
     **/
    nice.api.data.StorageMode = Slice.defineEnum([
        ['NONE', 0], ['_STATIC', 1], ['STATE', 2], ['COUNTS', 3], ['LOG', 4]]);

    nice.api.data.DeviceState = Slice.defineEnum([
        ['IDLE', 0], ['BUSY', 1], ['STOPPING', 2]]);

    nice.api.data.SansSampleMode = Slice.defineEnum([
        ['CHAMBER', 0], ['HUBER', 1]]);

    nice.api.data.CountAgainst = Slice.defineEnum([
        ['TIME', 0], ['MONITOR', 1], ['ROI', 2], ['TIME_MONITOR', 3], ['TIME_ROI', 4],
        ['MONITOR_ROI', 5], ['TIME_MONITOR_ROI', 6]]);

    nice.api.data.DeviceType = Slice.defineEnum([
        ['TEST_TYPE', 0], ['MOTOR', 1], ['MAIN_COUNTER', 2], ['LOGICAL_COUNTER', 3], ['SLAVE_COUNTER', 4],
        ['VIRTUAL_COUNTER', 5], ['TEMPERATURE_CONTROLLER', 6], ['SUPERCONDUCTING_MAGNET', 7], ['ELECTROMAGNET', 8], ['MAP', 9],
        ['VIRTUAL', 10], ['BIT', 11], ['SAMPLE', 12], ['HARDWARE', 13], ['POWER_SUPPLY', 14],
        ['POLARIZATION', 15]]);

    nice.api.data.FixedEnergyMode = Slice.defineEnum([
        ['EI', 0], ['EF', 1]]);

    nice.api.data.SampleGeometry = Slice.defineEnum([
        ['TILT', 0], ['EULERIAN', 1]]);

    nice.api.data.HklStrategy = Slice.defineEnum([
        ['STRICT_SCATTERING_PLANE', 0], ['SCATTERING_PLANE', 1], ['BISECTING', 2], ['FIXED_PHI', 3]]);

    nice.api.data.SpinEchoConfiguration = Slice.defineEnum([
        ['ECHO', 0], ['ECHO_SHORTY', 1], ['MAGNETIC_ECHO', 2], ['MAGNETIC_ECHO_SHORTY', 3], ['NSF', 4],
        ['NSF_SHORTY', 5], ['SF', 6], ['SF_SHORTY', 7], ['X_NSF', 8], ['X_NSF_SHORTY', 9],
        ['X_SF', 10], ['X_SF_SHORTY', 11], ['Y_NSF', 12], ['Y_NSF_SHORTY', 13], ['Y_SF', 14],
        ['Y_SF_SHORTY', 15], ['Z_NSF', 16], ['Z_NSF_SHORTY', 17], ['Z_SF', 18], ['Z_SF_SHORTY', 19],
        ['EXTRA_CONFIG1', 20], ['EXTRA_CONFIG1_SHORTY', 21], ['EXTRA_CONFIG2', 22], ['EXTRA_CONFIG2_SHORTY', 23]]);

    nice.api.data.PowerSupplyStatus = Slice.defineEnum([
        ['NORMAL', 0], ['VOLTAGE_LIMIT', 1], ['CURRENT_LIMIT', 2], ['GENERAL', 3], ['THERMAL', 4],
        ['WATER', 5], ['PHASE', 6], ['EXTERNAL', 7], ['OTHER', 8]]);

    nice.api.data.DisplayROI = Slice.defineEnum([
        ['NOTHING', 0], ['RAW_COUNTS', 1], ['SUM_OF_RAW_COUNTS', 2], ['ACTUAL_ROI', 3]]);

    nice.api.data.Validity = Slice.defineEnum([
        ['BAD', 0], ['SUSPECT', 1], ['GOOD', 2]]);

    nice.api.data.FlipperPosition = Slice.defineEnum([
        ['FRONT', 0], ['BACK', 1]]);

    nice.api.data.PolarizationMeasurementType = Slice.defineEnum([
        ['EMPTY_BEAM', 0], ['BLOCKED_BEAM', 1], ['TRANSMISSION', 2]]);

    nice.api.data.StartStopAction = Slice.defineEnum([
        ['START', 0], ['STOP', 1], ['RESTART', 2]]);

    nice.api.data.SampleState = Slice.defineEnum([
        ['READY', 0], ['CHANGE', 1]]);

    nice.api.data.PumpDirection = Slice.defineEnum([
        ['INFUSE', 0], ['WITHDRAW', 1]]);
    Slice.defineSequence(nice.api.data, "BoolArrayHelper", "Ice.BoolHelper", true);
    Slice.defineSequence(nice.api.data, "ByteArrayHelper", "Ice.ByteHelper", true);
    Slice.defineSequence(nice.api.data, "IntArrayHelper", "Ice.IntHelper", true);
    Slice.defineSequence(nice.api.data, "LongArrayHelper", "Ice.LongHelper", true);
    Slice.defineSequence(nice.api.data, "DoubleArrayHelper", "Ice.DoubleHelper", true);
    Slice.defineSequence(nice.api.data, "StringArrayHelper", "Ice.StringHelper", false);
    Slice.defineSequence(nice.api.data, "ByteArrayListHelper", "nice.api.data.ByteArrayHelper", false);
    Slice.defineDictionary(nice.api.data, "StringToDoubleMap", "StringToDoubleMapHelper", "Ice.StringHelper", "Ice.DoubleHelper", false, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "StringToIntMap", "StringToIntMapHelper", "Ice.StringHelper", "Ice.IntHelper", false, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "StringToStringMap", "StringToStringMapHelper", "Ice.StringHelper", "Ice.StringHelper", false, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "StringToBoolMap", "StringToBoolMapHelper", "Ice.StringHelper", "Ice.BoolHelper", false, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "StringToDoubleArrayMap", "StringToDoubleArrayMapHelper", "Ice.StringHelper", "nice.api.data.DoubleArrayHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    Slice.defineDictionary(nice.api.data, "StringToStringArrayMap", "StringToStringArrayMapHelper", "Ice.StringHelper", "nice.api.data.StringArrayHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    Slice.defineDictionary(nice.api.data, "IntToDoubleMap", "IntToDoubleMapHelper", "Ice.IntHelper", "Ice.DoubleHelper", true, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "IntToBoolMap", "IntToBoolMapHelper", "Ice.IntHelper", "Ice.BoolHelper", true, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "IntToIntMap", "IntToIntMapHelper", "Ice.IntHelper", "Ice.IntHelper", true, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "IntToStringMap", "IntToStringMapHelper", "Ice.IntHelper", "Ice.StringHelper", false, undefined, undefined);
    Slice.defineDictionary(nice.api.data, "IntToDoubleArrayMap", "IntToDoubleArrayMapHelper", "Ice.IntHelper", "nice.api.data.DoubleArrayHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    Slice.defineDictionary(nice.api.data, "IntToStringArrayMap", "IntToStringArrayMapHelper", "Ice.IntHelper", "nice.api.data.StringArrayHelper", false, undefined, undefined, Ice.ArrayUtil.equals);
    Slice.defineDictionary(nice.api.data, "StringToStringToStringMapMap", "StringToStringToStringMapMapHelper", "Ice.StringHelper", "nice.api.data.StringToStringMapHelper", false, undefined, undefined, Ice.HashMap.compareEquals);
    Slice.defineDictionary(nice.api.data, "IntToStringToDoubleMapMap", "IntToStringToDoubleMapMapHelper", "Ice.IntHelper", "nice.api.data.StringToDoubleMapHelper", false, undefined, undefined, Ice.HashMap.compareEquals);
    Slice.defineDictionary(nice.api.data, "IntToIntToDoubleMapMap", "IntToIntToDoubleMapMapHelper", "Ice.IntHelper", "nice.api.data.IntToDoubleMapHelper", false, undefined, undefined, Ice.HashMap.compareEquals);

    nice.api.data.TrajectoryMetaData = Slice.defineObject(
        function(trajectoryID, dataFilePaths, initialCustomVariables, initialCustomNodes)
        {
            Ice.Object.call(this);
            this.trajectoryID = trajectoryID !== undefined ? trajectoryID : 0;
            this.dataFilePaths = dataFilePaths !== undefined ? dataFilePaths : null;
            this.initialCustomVariables = initialCustomVariables !== undefined ? initialCustomVariables : null;
            this.initialCustomNodes = initialCustomNodes !== undefined ? initialCustomNodes : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::TrajectoryMetaData"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.trajectoryID);
            nice.api.data.StringArrayHelper.write(__os, this.dataFilePaths);
            nice.api.data.StringToStringMapHelper.write(__os, this.initialCustomVariables);
            nice.api.data.StringToStringMapHelper.write(__os, this.initialCustomNodes);
        },
        function(__is)
        {
            this.trajectoryID = __is.readInt();
            this.dataFilePaths = nice.api.data.StringArrayHelper.read(__is);
            this.initialCustomVariables = nice.api.data.StringToStringMapHelper.read(__is);
            this.initialCustomNodes = nice.api.data.StringToStringMapHelper.read(__is);
        },
        false);

    nice.api.data.TrajectoryMetaDataPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.TrajectoryMetaData.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.TrajectoryMetaData, nice.api.data.TrajectoryMetaDataPrx);
    Slice.defineDictionary(nice.api.data, "IntToTrajectoryMetaDataMap", "IntToTrajectoryMetaDataMapHelper", "Ice.IntHelper", "Ice.ObjectHelper", false, undefined, "nice.api.data.TrajectoryMetaData", Ice.HashMap.compareEquals);

    nice.api.data.Value = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::Value"
        ],
        -1, undefined, undefined, false);

    nice.api.data.ValuePrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.Value.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.Value, nice.api.data.ValuePrx);
    Slice.defineSequence(nice.api.data, "ValueArrayHelper", "Ice.ObjectHelper", false, "nice.api.data.Value");
    Slice.defineDictionary(nice.api.data, "StringToValueMap", "StringToValueMapHelper", "Ice.StringHelper", "Ice.ObjectHelper", false, undefined, "nice.api.data.Value", Ice.HashMap.compareEquals);

    nice.api.data.BoolValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : false;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::BoolValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeBool(this.val);
        },
        function(__is)
        {
            this.val = __is.readBool();
        },
        false);

    nice.api.data.BoolValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.BoolValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.BoolValue, nice.api.data.BoolValuePrx);

    nice.api.data.IntValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : 0;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.val);
        },
        function(__is)
        {
            this.val = __is.readInt();
        },
        false);

    nice.api.data.IntValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntValue, nice.api.data.IntValuePrx);

    nice.api.data.LongValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : 0;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::LongValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeLong(this.val);
        },
        function(__is)
        {
            this.val = __is.readLong();
        },
        false);

    nice.api.data.LongValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.LongValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.LongValue, nice.api.data.LongValuePrx);

    nice.api.data.DoubleValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : 0.0;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::DoubleValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeDouble(this.val);
        },
        function(__is)
        {
            this.val = __is.readDouble();
        },
        false);

    nice.api.data.DoubleValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.DoubleValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.DoubleValue, nice.api.data.DoubleValuePrx);

    nice.api.data.StringValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : "";
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.val);
        },
        function(__is)
        {
            this.val = __is.readString();
        },
        false);

    nice.api.data.StringValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringValue, nice.api.data.StringValuePrx);

    nice.api.data.DeviceStateValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.DeviceState.IDLE;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::DeviceStateValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.DeviceState.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.DeviceState.__read(__is);
        },
        false);

    nice.api.data.DeviceStateValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.DeviceStateValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.DeviceStateValue, nice.api.data.DeviceStateValuePrx);

    nice.api.data.SansSampleModeValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.SansSampleMode.CHAMBER;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::SansSampleModeValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.SansSampleMode.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.SansSampleMode.__read(__is);
        },
        false);

    nice.api.data.SansSampleModeValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.SansSampleModeValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.SansSampleModeValue, nice.api.data.SansSampleModeValuePrx);

    nice.api.data.CountAgainstValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.CountAgainst.TIME;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::CountAgainstValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.CountAgainst.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.CountAgainst.__read(__is);
        },
        false);

    nice.api.data.CountAgainstValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.CountAgainstValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.CountAgainstValue, nice.api.data.CountAgainstValuePrx);

    nice.api.data.FixedEnergyModeValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.FixedEnergyMode.EI;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::FixedEnergyModeValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.FixedEnergyMode.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.FixedEnergyMode.__read(__is);
        },
        false);

    nice.api.data.FixedEnergyModeValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.FixedEnergyModeValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.FixedEnergyModeValue, nice.api.data.FixedEnergyModeValuePrx);

    nice.api.data.SpinEchoConfigurationValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.SpinEchoConfiguration.ECHO;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::SpinEchoConfigurationValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.SpinEchoConfiguration.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.SpinEchoConfiguration.__read(__is);
        },
        false);

    nice.api.data.SpinEchoConfigurationValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.SpinEchoConfigurationValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.SpinEchoConfigurationValue, nice.api.data.SpinEchoConfigurationValuePrx);

    nice.api.data.PowerSupplyStatusValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.PowerSupplyStatus.NORMAL;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::PowerSupplyStatusValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.PowerSupplyStatus.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.PowerSupplyStatus.__read(__is);
        },
        false);

    nice.api.data.PowerSupplyStatusValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.PowerSupplyStatusValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.PowerSupplyStatusValue, nice.api.data.PowerSupplyStatusValuePrx);

    nice.api.data.TimeStampValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : 0;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::TimeStampValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            __os.writeLong(this.val);
        },
        function(__is)
        {
            this.val = __is.readLong();
        },
        false);

    nice.api.data.TimeStampValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.TimeStampValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.TimeStampValue, nice.api.data.TimeStampValuePrx);

    nice.api.data.DisplayROIValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.DisplayROI.NOTHING;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::DisplayROIValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.DisplayROI.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.DisplayROI.__read(__is);
        },
        false);

    nice.api.data.DisplayROIValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.DisplayROIValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.DisplayROIValue, nice.api.data.DisplayROIValuePrx);

    nice.api.data.FlipperPositionValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.FlipperPosition.FRONT;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::FlipperPositionValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.FlipperPosition.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.FlipperPosition.__read(__is);
        },
        false);

    nice.api.data.FlipperPositionValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.FlipperPositionValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.FlipperPositionValue, nice.api.data.FlipperPositionValuePrx);

    nice.api.data.PolarizationMeasurementTypeValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.PolarizationMeasurementType.EMPTY_BEAM;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::PolarizationMeasurementTypeValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.PolarizationMeasurementType.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.PolarizationMeasurementType.__read(__is);
        },
        false);

    nice.api.data.PolarizationMeasurementTypeValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.PolarizationMeasurementTypeValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.PolarizationMeasurementTypeValue, nice.api.data.PolarizationMeasurementTypeValuePrx);

    nice.api.data.SampleStateValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.SampleState.READY;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::SampleStateValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.SampleState.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.SampleState.__read(__is);
        },
        false);

    nice.api.data.SampleStateValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.SampleStateValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.SampleStateValue, nice.api.data.SampleStateValuePrx);

    nice.api.data.SampleGeometryValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.SampleGeometry.TILT;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::SampleGeometryValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.SampleGeometry.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.SampleGeometry.__read(__is);
        },
        false);

    nice.api.data.SampleGeometryValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.SampleGeometryValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.SampleGeometryValue, nice.api.data.SampleGeometryValuePrx);

    nice.api.data.HklStrategyValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.data.HklStrategy.STRICT_SCATTERING_PLANE;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::HklStrategyValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.HklStrategy.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.HklStrategy.__read(__is);
        },
        false);

    nice.api.data.HklStrategyValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.HklStrategyValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.HklStrategyValue, nice.api.data.HklStrategyValuePrx);

    nice.api.data.BoolArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::BoolArrayValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.BoolArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.BoolArrayHelper.read(__is);
        },
        false);

    nice.api.data.BoolArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.BoolArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.BoolArrayValue, nice.api.data.BoolArrayValuePrx);

    nice.api.data.IntArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntArrayValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntArrayHelper.read(__is);
        },
        false);

    nice.api.data.IntArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntArrayValue, nice.api.data.IntArrayValuePrx);

    nice.api.data.LongArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::LongArrayValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.LongArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.LongArrayHelper.read(__is);
        },
        false);

    nice.api.data.LongArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.LongArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.LongArrayValue, nice.api.data.LongArrayValuePrx);

    nice.api.data.DoubleArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::DoubleArrayValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.DoubleArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.DoubleArrayHelper.read(__is);
        },
        false);

    nice.api.data.DoubleArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.DoubleArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.DoubleArrayValue, nice.api.data.DoubleArrayValuePrx);

    nice.api.data.StringArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringArrayValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringArrayHelper.read(__is);
        },
        false);

    nice.api.data.StringArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringArrayValue, nice.api.data.StringArrayValuePrx);

    nice.api.data.StringToDoubleMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToDoubleMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToDoubleMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToDoubleMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToDoubleMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToDoubleMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToDoubleMapValue, nice.api.data.StringToDoubleMapValuePrx);

    nice.api.data.StringToIntMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToIntMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToIntMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToIntMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToIntMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToIntMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToIntMapValue, nice.api.data.StringToIntMapValuePrx);

    nice.api.data.StringToStringMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToStringMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToStringMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToStringMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToStringMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToStringMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToStringMapValue, nice.api.data.StringToStringMapValuePrx);

    nice.api.data.IntToDoubleMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToDoubleMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToDoubleMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToDoubleMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToDoubleMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToDoubleMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToDoubleMapValue, nice.api.data.IntToDoubleMapValuePrx);

    nice.api.data.IntToBoolMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToBoolMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToBoolMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToBoolMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToBoolMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToBoolMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToBoolMapValue, nice.api.data.IntToBoolMapValuePrx);

    nice.api.data.IntToIntMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToIntMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToIntMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToIntMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToIntMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToIntMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToIntMapValue, nice.api.data.IntToIntMapValuePrx);

    nice.api.data.StringToDoubleArrayMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToDoubleArrayMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToDoubleArrayMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToDoubleArrayMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToDoubleArrayMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToDoubleArrayMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToDoubleArrayMapValue, nice.api.data.StringToDoubleArrayMapValuePrx);

    nice.api.data.IntToStringArrayMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToStringArrayMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToStringArrayMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToStringArrayMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToStringArrayMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToStringArrayMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToStringArrayMapValue, nice.api.data.IntToStringArrayMapValuePrx);

    nice.api.data.IntToStringMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToStringMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToStringMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToStringMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToStringMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToStringMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToStringMapValue, nice.api.data.IntToStringMapValuePrx);

    nice.api.data.IntToDoubleArrayMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToDoubleArrayMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToDoubleArrayMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToDoubleArrayMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToDoubleArrayMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToDoubleArrayMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToDoubleArrayMapValue, nice.api.data.IntToDoubleArrayMapValuePrx);

    nice.api.data.StringToStringToStringMapMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToStringToStringMapMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToStringToStringMapMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToStringToStringMapMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToStringToStringMapMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToStringToStringMapMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToStringToStringMapMapValue, nice.api.data.StringToStringToStringMapMapValuePrx);

    nice.api.data.IntToStringToDoubleMapMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::IntToStringToDoubleMapMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.IntToStringToDoubleMapMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.IntToStringToDoubleMapMapHelper.read(__is);
        },
        false);

    nice.api.data.IntToStringToDoubleMapMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.IntToStringToDoubleMapMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.IntToStringToDoubleMapMapValue, nice.api.data.IntToStringToDoubleMapMapValuePrx);

    nice.api.data.ValueArrayValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 2,
        [
            "::Ice::Object",
            "::nice::api::data::Value",
            "::nice::api::data::ValueArrayValue"
        ],
        -1,
        function(__os)
        {
            nice.api.data.ValueArrayHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.ValueArrayHelper.read(__is);
        },
        false);

    nice.api.data.ValueArrayValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.ValueArrayValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.ValueArrayValue, nice.api.data.ValueArrayValuePrx);

    nice.api.data.StringToValueMapValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : null;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::StringToValueMapValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToValueMapHelper.write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.data.StringToValueMapHelper.read(__is);
        },
        false);

    nice.api.data.StringToValueMapValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.data.StringToValueMapValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.StringToValueMapValue, nice.api.data.StringToValueMapValuePrx);

    nice.api.data.NICECompletion = Slice.defineObject(
        function(replacementText, relevance)
        {
            Ice.Object.call(this);
            this.replacementText = replacementText !== undefined ? replacementText : "";
            this.relevance = relevance !== undefined ? relevance : 0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::NICECompletion"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.replacementText);
            __os.writeInt(this.relevance);
        },
        function(__is)
        {
            this.replacementText = __is.readString();
            this.relevance = __is.readInt();
        },
        false);

    nice.api.data.NICECompletionPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.NICECompletion.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.NICECompletion, nice.api.data.NICECompletionPrx);
    Slice.defineSequence(nice.api.data, "NICECompletionArrayHelper", "Ice.ObjectHelper", false, "nice.api.data.NICECompletion");

    nice.api.data.CompletionResult = Slice.defineObject(
        function(originalTrailingText, partialCompletion, fullCompletions)
        {
            Ice.Object.call(this);
            this.originalTrailingText = originalTrailingText !== undefined ? originalTrailingText : "";
            this.partialCompletion = partialCompletion !== undefined ? partialCompletion : "";
            this.fullCompletions = fullCompletions !== undefined ? fullCompletions : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::CompletionResult"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.originalTrailingText);
            __os.writeString(this.partialCompletion);
            nice.api.data.NICECompletionArrayHelper.write(__os, this.fullCompletions);
        },
        function(__is)
        {
            this.originalTrailingText = __is.readString();
            this.partialCompletion = __is.readString();
            this.fullCompletions = nice.api.data.NICECompletionArrayHelper.read(__is);
        },
        false);

    nice.api.data.CompletionResultPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.CompletionResult.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.CompletionResult, nice.api.data.CompletionResultPrx);

    nice.api.data.PeakFitData = Slice.defineObject(
        function(fitParameters, moveToFitParam, idealFitParameterDeviations, fitParametersUnit, fitParametersUnitIsRelative, FWHM, reducedChiSquared, fitType, xObserved, yObserved, dy, xTheory, yTheory, xNode, yNode, xUnit, yUnit, channelOfInterest, earlyTerminationFlag)
        {
            Ice.Object.call(this);
            this.fitParameters = fitParameters !== undefined ? fitParameters : null;
            this.moveToFitParam = moveToFitParam !== undefined ? moveToFitParam : "";
            this.idealFitParameterDeviations = idealFitParameterDeviations !== undefined ? idealFitParameterDeviations : null;
            this.fitParametersUnit = fitParametersUnit !== undefined ? fitParametersUnit : null;
            this.fitParametersUnitIsRelative = fitParametersUnitIsRelative !== undefined ? fitParametersUnitIsRelative : null;
            this.FWHM = FWHM !== undefined ? FWHM : 0.0;
            this.reducedChiSquared = reducedChiSquared !== undefined ? reducedChiSquared : 0.0;
            this.fitType = fitType !== undefined ? fitType : "";
            this.xObserved = xObserved !== undefined ? xObserved : null;
            this.yObserved = yObserved !== undefined ? yObserved : null;
            this.dy = dy !== undefined ? dy : null;
            this.xTheory = xTheory !== undefined ? xTheory : null;
            this.yTheory = yTheory !== undefined ? yTheory : null;
            this.xNode = xNode !== undefined ? xNode : "";
            this.yNode = yNode !== undefined ? yNode : "";
            this.xUnit = xUnit !== undefined ? xUnit : "";
            this.yUnit = yUnit !== undefined ? yUnit : "";
            this.channelOfInterest = channelOfInterest !== undefined ? channelOfInterest : 0;
            this.earlyTerminationFlag = earlyTerminationFlag !== undefined ? earlyTerminationFlag : false;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::PeakFitData"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringToDoubleMapHelper.write(__os, this.fitParameters);
            __os.writeString(this.moveToFitParam);
            nice.api.data.StringToDoubleMapHelper.write(__os, this.idealFitParameterDeviations);
            nice.api.data.StringToStringMapHelper.write(__os, this.fitParametersUnit);
            nice.api.data.StringToBoolMapHelper.write(__os, this.fitParametersUnitIsRelative);
            __os.writeDouble(this.FWHM);
            __os.writeDouble(this.reducedChiSquared);
            __os.writeString(this.fitType);
            nice.api.data.DoubleArrayHelper.write(__os, this.xObserved);
            nice.api.data.DoubleArrayHelper.write(__os, this.yObserved);
            nice.api.data.DoubleArrayHelper.write(__os, this.dy);
            nice.api.data.DoubleArrayHelper.write(__os, this.xTheory);
            nice.api.data.DoubleArrayHelper.write(__os, this.yTheory);
            __os.writeString(this.xNode);
            __os.writeString(this.yNode);
            __os.writeString(this.xUnit);
            __os.writeString(this.yUnit);
            __os.writeInt(this.channelOfInterest);
            __os.writeBool(this.earlyTerminationFlag);
        },
        function(__is)
        {
            this.fitParameters = nice.api.data.StringToDoubleMapHelper.read(__is);
            this.moveToFitParam = __is.readString();
            this.idealFitParameterDeviations = nice.api.data.StringToDoubleMapHelper.read(__is);
            this.fitParametersUnit = nice.api.data.StringToStringMapHelper.read(__is);
            this.fitParametersUnitIsRelative = nice.api.data.StringToBoolMapHelper.read(__is);
            this.FWHM = __is.readDouble();
            this.reducedChiSquared = __is.readDouble();
            this.fitType = __is.readString();
            this.xObserved = nice.api.data.DoubleArrayHelper.read(__is);
            this.yObserved = nice.api.data.DoubleArrayHelper.read(__is);
            this.dy = nice.api.data.DoubleArrayHelper.read(__is);
            this.xTheory = nice.api.data.DoubleArrayHelper.read(__is);
            this.yTheory = nice.api.data.DoubleArrayHelper.read(__is);
            this.xNode = __is.readString();
            this.yNode = __is.readString();
            this.xUnit = __is.readString();
            this.yUnit = __is.readString();
            this.channelOfInterest = __is.readInt();
            this.earlyTerminationFlag = __is.readBool();
        },
        false);

    nice.api.data.PeakFitDataPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.PeakFitData.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.PeakFitData, nice.api.data.PeakFitDataPrx);

    nice.api.data.PeakFitDataPlus = Slice.defineObject(
        function(scanID, fitData)
        {
            Ice.Object.call(this);
            this.scanID = scanID !== undefined ? scanID : "";
            this.fitData = fitData !== undefined ? fitData : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::PeakFitDataPlus"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.scanID);
            __os.writeObject(this.fitData);
        },
        function(__is)
        {
            var self = this;
            this.scanID = __is.readString();
            __is.readObject(function(__o){ self.fitData = __o; }, nice.api.data.PeakFitData);
        },
        false);

    nice.api.data.PeakFitDataPlusPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.PeakFitDataPlus.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.PeakFitDataPlus, nice.api.data.PeakFitDataPlusPrx);
    Slice.defineSequence(nice.api.data, "PeakFitDataPlusArrayHelper", "Ice.ObjectHelper", false, "nice.api.data.PeakFitDataPlus");

    nice.api.data.DataMonitor = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::data::DataMonitor"
        ],
        -1, undefined, undefined, false);

    nice.api.data.DataMonitorPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.data.DataMonitor.ice_staticId, undefined);

    Slice.defineOperations(nice.api.data.DataMonitor, nice.api.data.DataMonitorPrx,
    {
        "emit": [, , , , , , [["nice.api.data.ByteArrayHelper"]], , , , ],
        "onSubscribe": [, , , , , , [["nice.api.data.ByteArrayListHelper"], ["nice.api.data.PeakFitDataPlusArrayHelper"]], , , true, ],
        "peakFit": [, , , , , , [["nice.api.data.PeakFitDataPlus", true]], , , true, ]
    });

    nice.api.PolState = __M.module("nice.api.PolState");

    nice.api.PolState.PolarizerState = Slice.defineEnum([
        ['UP', 0], ['DOWN', 1], ['BEAM_OUT', 2]]);

    nice.api.PolState.PolarizerStateValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.PolState.PolarizerState.UP;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::PolState::PolarizerStateValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.PolState.PolarizerState.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.PolState.PolarizerState.__read(__is);
        },
        false);

    nice.api.PolState.PolarizerStateValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.PolState.PolarizerStateValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.PolState.PolarizerStateValue, nice.api.PolState.PolarizerStateValuePrx);

    nice.api.UpOrDownState = __M.module("nice.api.UpOrDownState");

    nice.api.UpOrDownState.UpOrDown = Slice.defineEnum([
        ['UP', 0], ['DOWN', 1]]);

    nice.api.UpOrDownState.UpOrDownValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.UpOrDownState.UpOrDown.UP;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::UpOrDownState::UpOrDownValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.UpOrDownState.UpOrDown.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.UpOrDownState.UpOrDown.__read(__is);
        },
        false);

    nice.api.UpOrDownState.UpOrDownValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.UpOrDownState.UpOrDownValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.UpOrDownState.UpOrDownValue, nice.api.UpOrDownState.UpOrDownValuePrx);

    nice.api.SlitGeometry = __M.module("nice.api.SlitGeometry");

    nice.api.SlitGeometry.SlitShape = Slice.defineEnum([
        ['RECTANGLE', 0], ['CIRCLE', 1], ['NONE', 2]]);

    nice.api.SlitGeometry.SlitShapeValue = Slice.defineObject(
        function(val)
        {
            nice.api.data.Value.call(this);
            this.val = val !== undefined ? val : nice.api.SlitGeometry.SlitShape.RECTANGLE;
        },
        nice.api.data.Value, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::SlitGeometry::SlitShapeValue",
            "::nice::api::data::Value"
        ],
        -1,
        function(__os)
        {
            nice.api.SlitGeometry.SlitShape.__write(__os, this.val);
        },
        function(__is)
        {
            this.val = nice.api.SlitGeometry.SlitShape.__read(__is);
        },
        false);

    nice.api.SlitGeometry.SlitShapeValuePrx = Slice.defineProxy(nice.api.data.ValuePrx, nice.api.SlitGeometry.SlitShapeValue.ice_staticId, undefined);

    Slice.defineOperations(nice.api.SlitGeometry.SlitShapeValue, nice.api.SlitGeometry.SlitShapeValuePrx);
    exports.nice = nice;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
