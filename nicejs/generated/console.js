// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `console.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var nice = require("events").nice;
    var Slice = Ice.Slice;

    nice.api = __M.module("nice.api");

    nice.api.console = __M.module("nice.api.console");

    /**
     * Console state
     * 
     **/
    nice.api.console.ConsoleEvent = Slice.defineObject(
        function(level, timestamp, commandUUID, eventID, message)
        {
            Ice.Object.call(this);
            this.level = level !== undefined ? level : nice.api.events.EventLevel.INFO;
            this.timestamp = timestamp !== undefined ? timestamp : 0;
            this.commandUUID = commandUUID !== undefined ? commandUUID : "";
            this.eventID = eventID !== undefined ? eventID : 0;
            this.message = message !== undefined ? message : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::console::ConsoleEvent"
        ],
        -1,
        function(__os)
        {
            nice.api.events.EventLevel.__write(__os, this.level);
            __os.writeLong(this.timestamp);
            __os.writeString(this.commandUUID);
            __os.writeInt(this.eventID);
            __os.writeString(this.message);
        },
        function(__is)
        {
            this.level = nice.api.events.EventLevel.__read(__is);
            this.timestamp = __is.readLong();
            this.commandUUID = __is.readString();
            this.eventID = __is.readInt();
            this.message = __is.readString();
        },
        false);

    nice.api.console.ConsoleEventPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.console.ConsoleEvent.ice_staticId, undefined);

    Slice.defineOperations(nice.api.console.ConsoleEvent, nice.api.console.ConsoleEventPrx);
    Slice.defineSequence(nice.api.console, "ConsoleEventArrayHelper", "Ice.ObjectHelper", false, "nice.api.console.ConsoleEvent");

    nice.api.console.ConsoleMonitor = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::console::ConsoleMonitor"
        ],
        -1, undefined, undefined, false);

    nice.api.console.ConsoleMonitorPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.console.ConsoleMonitor.ice_staticId, undefined);

    Slice.defineOperations(nice.api.console.ConsoleMonitor, nice.api.console.ConsoleMonitorPrx,
    {
        "report": [, , , , , , [["nice.api.console.ConsoleEvent", true]], , , true, ],
        "switchedCurrentExperiment": [, , , , , , [["nice.api.console.ConsoleEventArrayHelper"]], , , true, ],
        "onSubscribe": [, , , , , , [["nice.api.console.ConsoleEventArrayHelper"]], , , true, ]
    });
    exports.nice = nice;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
