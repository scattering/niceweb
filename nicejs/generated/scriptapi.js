// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `scriptapi.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Glacier2 = require("ice").Glacier2;
    var nice = __M.require(module, 
    [
        "exceptions",
        "system",
        "experiment",
        "dryrun",
        "queue",
        "console",
        "data",
        "devices",
        "file",
        "sampleAlignment"
    ]).nice;
    
    var Slice = Ice.Slice;

    nice.api = __M.module("nice.api");

    nice.api.RunningScript = Slice.defineObject(
        function(name, paramBlock)
        {
            Ice.Object.call(this);
            this.name = name !== undefined ? name : "";
            this.paramBlock = paramBlock !== undefined ? paramBlock : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::RunningScript"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.name);
            __os.writeString(this.paramBlock);
        },
        function(__is)
        {
            this.name = __is.readString();
            this.paramBlock = __is.readString();
        },
        false);

    nice.api.RunningScriptPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.RunningScript.ice_staticId, undefined);

    Slice.defineOperations(nice.api.RunningScript, nice.api.RunningScriptPrx);

    nice.api.ScriptApi = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::ScriptApi"
        ],
        -1, undefined, undefined, false);

    nice.api.ScriptApiPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.ScriptApi.ice_staticId, undefined);

    Slice.defineOperations(nice.api.ScriptApi, nice.api.ScriptApiPrx,
    {
        "javaPrint": [, , , , , , [[7]], , , , ],
        "consolePrint": [, , , , , , [[7]], , , , ],
        "endScriptProcess": [, , , , , , , , , , ],
        "move": [, , , , , ["nice.api.queue.QueueNode", true], [["nice.api.data.StringArrayHelper"], [1]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "count": [, , , , , ["nice.api.queue.QueueNode", true], [[6], [3], [6], [7], [1]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "countNoWait": [, , , , , ["nice.api.queue.QueueNode", true], [[6], [3], [6], [7], [1]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "findpeak": [, , , , , ["nice.api.queue.QueueNode", true], [["nice.api.data.StringArrayHelper"], ["nice.api.data.StringArrayHelper"], ["nice.api.data.StringArrayHelper"], [6], [3], [7], [1], [7], [1], [1]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "runSequence": [, , , , , ["nice.api.queue.QueueNode", true], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "email": [, , , , , ["nice.api.queue.QueueNode", true], [[7], [7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "emailEveryoneInExperiment": [, , , , , , [[7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "getPythonScript": [, , , , , ["nice.api.RunningScript", true], , , 
        [
            nice.api.exceptions.StopException
        ], , true],
        "getPythonScriptFolder": [, , , , , [7], , , 
        [
            nice.api.exceptions.StopException
        ], , ],
        "isOver": [, , , , , [1], [[7]], , , , ],
        "terminateCount": [, , , , , [1], [[7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "terminateFindPeak": [, , , , , [1], [[7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "buildTrajectoryData": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "startTrajectory": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "startScan": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "startCount": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "endCount": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "endScan": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "endTrajectory": [, , , , , , [[3], ["nice.api.data.StringArrayHelper"], [7], [7], [7], [3], [7], [7]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "getFindPeakData": [, , , , , ["nice.api.data.PeakFitData", true], , , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "writer": [, , , , , ["nice.api.queue.QueueNode", true], [[3], ["nice.api.data.StringArrayHelper"]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "runJsonTrajectory": [, , , , , , [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , ],
        "runJsonTrajectoryFile": [, , , , , ["nice.api.queue.QueueNode", true], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "runJsonTrajectoryFileWithPreInit": [, , , , , ["nice.api.queue.QueueNode", true], [[7], ["nice.api.data.StringArrayHelper"]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "registerEvent": [, , , , , ["nice.api.data.IntValue", true], [[nice.api.events.EventLevel.__helper], [7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "read": [, , , , , [7], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , ],
        "readValue": [, , , , , ["nice.api.data.Value", true], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "readValueInternalUnits": [, , , , , ["nice.api.data.Value", true], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "readFullValue": [, , , , , ["nice.api.devices.NodeStatusValue", true], [[7]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "getHistoricValue": [, , , , , ["nice.api.devices.NodeStatusValueArrayHelper"], [["nice.api.data.StringArrayHelper"], [4], [1]], , 
        [
            nice.api.exceptions.CommandException,
            nice.api.exceptions.StopException
        ], , true],
        "getHKLReflections": [, , , , , ["nice.api.sampleAlignment.HKLReflectionMapHelper"], , , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "setHKLReflections": [, , , , , , [["nice.api.sampleAlignment.HKLReflectionMapHelper"]], , 
        [
            nice.api.exceptions.CommandException
        ], true, ],
        "getNextHKLReflectionID": [, , , , , [3], , , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "fitLattice": [, , , , , ["nice.api.sampleAlignment.SampleGeometryFitResults", true], [[nice.api.sampleAlignment.CrystalSystem.__helper], ["nice.api.data.StringToDoubleMapHelper"]], , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "fitZeroes": [, , , , , ["nice.api.sampleAlignment.SampleGeometryFitResults", true], [[1], [1]], , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "calcU1": [, , , , , ["nice.api.sampleAlignment.UCalcResults", true], [[3], ["nice.api.data.DoubleArrayHelper"], ["nice.api.data.DoubleArrayHelper"]], , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "calcU2": [, , , , , ["nice.api.sampleAlignment.UCalcResults", true], [[3], [3]], , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "fitUMatrix": [, , , , , ["nice.api.sampleAlignment.UFitResults", true], [["nice.api.data.IntArrayHelper"], ["nice.api.data.StringArrayHelper"], [nice.api.sampleAlignment.CrystalSystem.__helper]], , 
        [
            nice.api.exceptions.CommandException
        ], , true],
        "calcTwoTheta": [, , , , , [6], [[6], [6], [6], [6], [6], [6], [6], [6], [6], [6]], , 
        [
            nice.api.exceptions.CommandException
        ], , ],
        "calcMotorsFromHKL": [, , , , , ["nice.api.sampleAlignment.HKLMotorPositions", true], [["nice.api.sampleAlignment.HKLMotorPositionsInput", true]], , 
        [
            nice.api.exceptions.CommandException
        ], true, true],
        "subscribeToQueue": [, , , , , , [["nice.api.queue.QueueMonitorPrx"]], , 
        [
            nice.api.exceptions.TopicException
        ], , ]
    });
    exports.nice = nice;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
