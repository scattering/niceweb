// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `system.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var nice = require("data").nice;
    var Slice = Ice.Slice;

    nice.api = __M.module("nice.api");

    nice.api.system = __M.module("nice.api.system");

    nice.api.system.StaticSystemState = Slice.defineObject(
        function(instrumentID, instrumentName, codeVersionID, testDeployment, mainCSS, dryrunCSS, fileSeparator, consoleCommandPackagesPaths)
        {
            Ice.Object.call(this);
            this.instrumentID = instrumentID !== undefined ? instrumentID : "";
            this.instrumentName = instrumentName !== undefined ? instrumentName : "";
            this.codeVersionID = codeVersionID !== undefined ? codeVersionID : "";
            this.testDeployment = testDeployment !== undefined ? testDeployment : false;
            this.mainCSS = mainCSS !== undefined ? mainCSS : "";
            this.dryrunCSS = dryrunCSS !== undefined ? dryrunCSS : "";
            this.fileSeparator = fileSeparator !== undefined ? fileSeparator : "";
            this.consoleCommandPackagesPaths = consoleCommandPackagesPaths !== undefined ? consoleCommandPackagesPaths : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::system::StaticSystemState"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.instrumentID);
            __os.writeString(this.instrumentName);
            __os.writeString(this.codeVersionID);
            __os.writeBool(this.testDeployment);
            __os.writeString(this.mainCSS);
            __os.writeString(this.dryrunCSS);
            __os.writeString(this.fileSeparator);
            nice.api.data.StringArrayHelper.write(__os, this.consoleCommandPackagesPaths);
        },
        function(__is)
        {
            this.instrumentID = __is.readString();
            this.instrumentName = __is.readString();
            this.codeVersionID = __is.readString();
            this.testDeployment = __is.readBool();
            this.mainCSS = __is.readString();
            this.dryrunCSS = __is.readString();
            this.fileSeparator = __is.readString();
            this.consoleCommandPackagesPaths = nice.api.data.StringArrayHelper.read(__is);
        },
        false);

    nice.api.system.StaticSystemStatePrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.system.StaticSystemState.ice_staticId, undefined);

    Slice.defineOperations(nice.api.system.StaticSystemState, nice.api.system.StaticSystemStatePrx);

    nice.api.system.DynamicSystemState = Slice.defineObject(
        function(clientHoldingLock)
        {
            Ice.Object.call(this);
            this.clientHoldingLock = clientHoldingLock !== undefined ? clientHoldingLock : "";
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::system::DynamicSystemState"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.clientHoldingLock);
        },
        function(__is)
        {
            this.clientHoldingLock = __is.readString();
        },
        false);

    nice.api.system.DynamicSystemStatePrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.system.DynamicSystemState.ice_staticId, undefined);

    Slice.defineOperations(nice.api.system.DynamicSystemState, nice.api.system.DynamicSystemStatePrx);

    nice.api.system.SystemMonitor = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::system::SystemMonitor"
        ],
        -1, undefined, undefined, false);

    nice.api.system.SystemMonitorPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.system.SystemMonitor.ice_staticId, undefined);

    Slice.defineOperations(nice.api.system.SystemMonitor, nice.api.system.SystemMonitorPrx,
    {
        "onSubscribe": [, , , , , , [["nice.api.system.DynamicSystemState", true]], , , true, ],
        "stateChanged": [, , , , , , [["nice.api.system.DynamicSystemState", true]], , , true, ],
        "serverShutdown": [, , , , , , , , , , ]
    });
    exports.nice = nice;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
