// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.0
//
// <auto-generated>
//
// Generated from file `dryrun.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var nice = __M.require(module, 
    [
        "console",
        "data",
        "queue"
    ]).nice;
    
    var Slice = Ice.Slice;

    nice.api = __M.module("nice.api");

    nice.api.dryrun = __M.module("nice.api.dryrun");

    nice.api.dryrun.DryRunRecord = Slice.defineObject(
        function(name, predictedPosition, commandedPosition, validity, validityString, errors)
        {
            Ice.Object.call(this);
            this.name = name !== undefined ? name : "";
            this.predictedPosition = predictedPosition !== undefined ? predictedPosition : "";
            this.commandedPosition = commandedPosition !== undefined ? commandedPosition : "";
            this.validity = validity !== undefined ? validity : nice.api.data.Validity.BAD;
            this.validityString = validityString !== undefined ? validityString : "";
            this.errors = errors !== undefined ? errors : null;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::dryrun::DryRunRecord"
        ],
        -1,
        function(__os)
        {
            __os.writeString(this.name);
            __os.writeString(this.predictedPosition);
            __os.writeString(this.commandedPosition);
            nice.api.data.Validity.__write(__os, this.validity);
            __os.writeString(this.validityString);
            nice.api.queue.CommandErrorSeqHelper.write(__os, this.errors);
        },
        function(__is)
        {
            this.name = __is.readString();
            this.predictedPosition = __is.readString();
            this.commandedPosition = __is.readString();
            this.validity = nice.api.data.Validity.__read(__is);
            this.validityString = __is.readString();
            this.errors = nice.api.queue.CommandErrorSeqHelper.read(__is);
        },
        false);

    nice.api.dryrun.DryRunRecordPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.dryrun.DryRunRecord.ice_staticId, undefined);

    Slice.defineOperations(nice.api.dryrun.DryRunRecord, nice.api.dryrun.DryRunRecordPrx);
    Slice.defineSequence(nice.api.dryrun, "DryRunArrayHelper", "Ice.ObjectHelper", false, "nice.api.dryrun.DryRunRecord");
    Slice.defineSequence(nice.api.dryrun, "DryRunTableDataHelper", "nice.api.dryrun.DryRunArrayHelper", false);

    nice.api.dryrun.DryRunTableRecord = Slice.defineObject(
        function(columnNames, scannedNames, controlNames, customVarNames, tableData, scannedNamesInInit, tableInitData, summary, knownEstimatedTime, hasUnknownEstimatedTime)
        {
            Ice.Object.call(this);
            this.columnNames = columnNames !== undefined ? columnNames : null;
            this.scannedNames = scannedNames !== undefined ? scannedNames : null;
            this.controlNames = controlNames !== undefined ? controlNames : null;
            this.customVarNames = customVarNames !== undefined ? customVarNames : null;
            this.tableData = tableData !== undefined ? tableData : null;
            this.scannedNamesInInit = scannedNamesInInit !== undefined ? scannedNamesInInit : null;
            this.tableInitData = tableInitData !== undefined ? tableInitData : null;
            this.summary = summary !== undefined ? summary : "";
            this.knownEstimatedTime = knownEstimatedTime !== undefined ? knownEstimatedTime : 0.0;
            this.hasUnknownEstimatedTime = hasUnknownEstimatedTime !== undefined ? hasUnknownEstimatedTime : false;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::dryrun::DryRunTableRecord"
        ],
        -1,
        function(__os)
        {
            nice.api.data.StringArrayHelper.write(__os, this.columnNames);
            nice.api.data.StringArrayHelper.write(__os, this.scannedNames);
            nice.api.data.StringArrayHelper.write(__os, this.controlNames);
            nice.api.data.StringArrayHelper.write(__os, this.customVarNames);
            nice.api.dryrun.DryRunTableDataHelper.write(__os, this.tableData);
            nice.api.data.StringArrayHelper.write(__os, this.scannedNamesInInit);
            nice.api.dryrun.DryRunTableDataHelper.write(__os, this.tableInitData);
            __os.writeString(this.summary);
            __os.writeDouble(this.knownEstimatedTime);
            __os.writeBool(this.hasUnknownEstimatedTime);
        },
        function(__is)
        {
            this.columnNames = nice.api.data.StringArrayHelper.read(__is);
            this.scannedNames = nice.api.data.StringArrayHelper.read(__is);
            this.controlNames = nice.api.data.StringArrayHelper.read(__is);
            this.customVarNames = nice.api.data.StringArrayHelper.read(__is);
            this.tableData = nice.api.dryrun.DryRunTableDataHelper.read(__is);
            this.scannedNamesInInit = nice.api.data.StringArrayHelper.read(__is);
            this.tableInitData = nice.api.dryrun.DryRunTableDataHelper.read(__is);
            this.summary = __is.readString();
            this.knownEstimatedTime = __is.readDouble();
            this.hasUnknownEstimatedTime = __is.readBool();
        },
        false);

    nice.api.dryrun.DryRunTableRecordPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.dryrun.DryRunTableRecord.ice_staticId, undefined);

    Slice.defineOperations(nice.api.dryrun.DryRunTableRecord, nice.api.dryrun.DryRunTableRecordPrx);

    /**
     * DryRun topic
     * 
     **/
    nice.api.dryrun.DryrunMonitor = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::nice::api::dryrun::DryrunMonitor"
        ],
        -1, undefined, undefined, false);

    nice.api.dryrun.DryrunMonitorPrx = Slice.defineProxy(Ice.ObjectPrx, nice.api.dryrun.DryrunMonitor.ice_staticId, undefined);

    Slice.defineOperations(nice.api.dryrun.DryrunMonitor, nice.api.dryrun.DryrunMonitorPrx,
    {
        "update": [, , , , , , [["nice.api.dryrun.DryRunTableRecord", true]], , , true, ],
        "onSubscribe": [, , , , , , [["nice.api.dryrun.DryRunTableRecord", true]], , , true, ]
    });
    exports.nice = nice;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : window.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : window));
